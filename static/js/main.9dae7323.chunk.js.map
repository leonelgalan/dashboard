{"version":3,"sources":["actions/index.js","filter.js","reducers/settings.js","reducers/index.js","lib/configureStore.js","components/filters/LetterFilter.jsx","components/filters/TextFilter.jsx","components/filters/OptionsFilter.jsx","components/filters/YesFilter.jsx","components/FilterBar.jsx","containers/FilterBarContainer.js","components/SelectedLetter.jsx","containers/SelectedLetterContainer.js","pages/Summary.jsx","pages/Data.jsx","components/Sidebar.jsx","components/Navbar.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["CHANGE_FILTER","changeFilter","payload","type","LETTERS","DEFAULT_FILTERS","letter","options","text","yes","defaultFilterProps","PropTypes","string","arrayOf","bool","undefined","settings","state","action","history","combineReducers","router","connectRouter","createBrowserHistory","composeEnhancers","composeWithDevTools","LetterFilter","value","onChange","className","htmlFor","id","map","option","key","toUpperCase","defaultProps","TextFilter","useState","setText","event","eventValue","target","placeholder","aria-label","aria-describedby","onClick","role","OptionsFilter","multiple","YesFilter","checked","FilterBar","onChangeLetter","onChangeOptions","onChangeText","onChangeYes","allOptions","selectedOptionsValues","filter","x","selected","connect","ownProps","dispatch","SelectedLetter","Summary","FilterBarContainer","SelectedLetterContainer","Data","to","Sidebar","exact","Navbar","data-toggle","data-target","aria-controls","aria-expanded","store","preloadedState","createStore","createRootReducer","applyMiddleware","routerMiddleware","logger","configureStore","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9dae7323.chunk.js","sourcesContent":["export const CHANGE_FILTER = 'CHANGE_FILTER';\n\nexport function changeFilter(payload) {\n  return { type: CHANGE_FILTER, payload };\n}\n","import PropTypes from 'prop-types';\n\nexport const FILTERS = ['letter', 'options', 'yes', 'query'];\n\nexport const LETTERS = ['a', 'b', 'c'];\n\nexport const DEFAULT_FILTERS = {\n  letter: 'a',\n  options: [],\n  text: '',\n  yes: false,\n};\n\nexport const filterProps = {\n  letter: PropTypes.string,\n  options: PropTypes.arrayOf(PropTypes.string),\n  text: PropTypes.string,\n  yes: PropTypes.bool,\n};\n\nexport const defaultFilterProps = {\n  letter: 'A',\n  options: undefined,\n  yes: undefined,\n  text: undefined,\n};\n","import { CHANGE_FILTER } from '../actions';\n\nimport { DEFAULT_FILTERS } from '../filter';\n\nexport default function settings(state = DEFAULT_FILTERS, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case CHANGE_FILTER:\n      return { ...state, ...payload };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\nimport settings from './settings';\n\nexport default (history) => combineReducers({\n  router: connectRouter(history),\n  settings,\n});\n","import { createBrowserHistory } from 'history';\nimport { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { routerMiddleware } from 'connected-react-router';\nimport logger from 'redux-logger';\n\nimport createRootReducer from '../reducers';\n\nexport const history = createBrowserHistory();\n\nconst composeEnhancers = composeWithDevTools;\n\nexport default function configureStore(preloadedState = {}) {\n  const store = createStore(\n    createRootReducer(history),\n    preloadedState,\n    composeEnhancers(\n      applyMiddleware(\n        routerMiddleware(history),\n        logger,\n      ),\n    ),\n  );\n\n  return store;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LETTERS } from '../../filter';\n\nconst LetterFilter = ({ value, onChange }) => (\n  <div className=\"form-group col-md-3\">\n    <label htmlFor=\"letterFilter\">Select Letter</label>\n    <select\n      id=\"letterFilter\"\n      className=\"form-control\"\n      value={value}\n      onChange={onChange}>\n      { LETTERS.map((option) => (\n        <option key={option} value={option}>{option.toUpperCase()}</option>\n      )) }\n    </select>\n  </div>\n);\n\nLetterFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nLetterFilter.defaultProps = {\n  value: '',\n  onChange: () => {},\n};\n\nexport default LetterFilter;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst TextFilter = ({ value, onChange }) => {\n  const [text, setText] = useState(value);\n\n  const handleChange = (event) => {\n    const { value: eventValue } = event.target;\n    setText(eventValue);\n  };\n\n  const handleSearch = () => {\n    onChange({ value: text });\n  };\n\n  return (\n    <div className=\"form-group col-md-3\">\n      <label htmlFor=\"queryFilter\">Search</label>\n      <div className=\"input-group\">\n        <input\n          type=\"text\"\n          id=\"queryFilter\"\n          className=\"form-control\"\n          value={text}\n          onChange={handleChange}\n          placeholder=\"Search\"\n          aria-label=\"Search Query\"\n          aria-describedby=\"button-addon\" />\n        <div className=\"input-group-append\">\n          <button\n            type=\"button\"\n            id=\"button-addon\"\n            className=\"btn btn-outline-secondary\"\n            onClick={handleSearch}>\n            <span role=\"img\" aria-label=\"Search Icon\">&#x1F50E;</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nTextFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nTextFilter.defaultProps = {\n  value: '',\n  onChange: () => {},\n};\n\nexport default TextFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LETTERS } from '../../filter';\n\nconst OptionsFilter = ({ value, onChange }) => (\n  <div className=\"form-group col-md-3\">\n    <label htmlFor=\"optionsFilter\">Options</label>\n    <select\n      id=\"optionsFilter\"\n      multiple\n      className=\"form-control\"\n      value={value}\n      onChange={onChange}>\n      { LETTERS.map((option) => (\n        <option key={option} value={option}>\n          { `Option ${option.toUpperCase()}`}\n        </option>\n      )) }\n    </select>\n  </div>\n);\n\nOptionsFilter.propTypes = {\n  value: PropTypes.arrayOf(PropTypes.string),\n  onChange: PropTypes.func,\n};\n\nOptionsFilter.defaultProps = {\n  value: [],\n  onChange: () => {},\n};\n\nexport default OptionsFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst YesFilter = ({ value, onChange }) => (\n  <div className=\"form-group col-md-3\">\n    <div className=\"form-check\">\n      <input\n        id=\"featuredFilter\"\n        type=\"checkbox\"\n        className=\"form-check-input\"\n        checked={value}\n        onChange={onChange} />\n      <label className=\"form-check-label\" htmlFor=\"featuredFilter\">\n        Yes\n      </label>\n    </div>\n  </div>\n);\n\nYesFilter.propTypes = {\n  value: PropTypes.bool,\n  onChange: PropTypes.func,\n};\n\nYesFilter.defaultProps = {\n  value: false,\n  onChange: () => {},\n};\n\nexport default YesFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { filterProps, defaultFilterProps } from '../filter';\nimport {\n  TextFilter, LetterFilter, OptionsFilter, YesFilter,\n} from './filters';\n\nconst FilterBar = ({\n  letter,\n  options,\n  text,\n  yes,\n  onChangeLetter,\n  onChangeOptions,\n  onChangeText,\n  onChangeYes,\n}) => {\n  const handleTextChange = ({ value }) => {\n    onChangeText(value);\n  };\n\n  const handleLetterChange = (event) => {\n    const { value } = event.target;\n    onChangeLetter(value);\n  };\n\n  const handleOptionsChange = (event) => {\n    const { options: allOptions } = event.target;\n    const selectedOptionsValues = [...allOptions].filter((x) => x.selected).map((x) => x.value);\n    onChangeOptions(selectedOptionsValues);\n  };\n\n  const handleYesChange = (event) => {\n    const { checked } = event.target;\n    onChangeYes(checked);\n  };\n\n  return (\n    <div className=\"row bg-light\">\n      <TextFilter value={text} onChange={handleTextChange} />\n      <LetterFilter value={letter} onChange={handleLetterChange} />\n      <OptionsFilter value={options} onChange={handleOptionsChange} />\n      <YesFilter value={yes} onChange={handleYesChange} />\n    </div>\n  );\n};\n\nFilterBar.propTypes = {\n  ...filterProps,\n  onChangeLetter: PropTypes.func,\n  onChangeOptions: PropTypes.func,\n  onChangeText: PropTypes.func,\n  onChangeYes: PropTypes.func,\n};\n\nFilterBar.defaultProps = {\n  ...defaultFilterProps,\n  onChangeLetter: () => {},\n  onChangeOptions: () => {},\n  onChangeText: () => {},\n  onChangeYes: () => {},\n};\n\nexport default FilterBar;\n","import { connect } from 'react-redux';\n\nimport { changeFilter } from '../actions';\nimport FilterBar from '../components/FilterBar';\n\nconst mapStateToProps = (state, ownProps) => ({ ...state.settings, ...ownProps });\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChangeLetter: (letter) => dispatch(changeFilter({ letter })),\n  onChangeOptions: (options) => dispatch(changeFilter({ options })),\n  onChangeText: (text) => dispatch(changeFilter({ text })),\n  onChangeYes: (yes) => dispatch(changeFilter({ yes })),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SelectedLetter = ({ letter }) => (\n  <p>{ `Selected Letter: ${letter.toUpperCase()}` }</p>\n);\n\nSelectedLetter.propTypes = {\n  letter: PropTypes.string.isRequired,\n};\n\nexport default SelectedLetter;\n","import { connect } from 'react-redux';\n\nimport SelectedLetter from '../components/SelectedLetter';\n\nconst mapStateToProps = (state) => ({ letter: state.settings.letter });\n\nexport default connect(mapStateToProps)(SelectedLetter);\n","import React from 'react';\nimport FilterBarContainer from '../containers/FilterBarContainer';\nimport SelectedLetterContainer from '../containers/SelectedLetterContainer';\n\nconst Summary = () => (\n  <>\n    <FilterBarContainer />\n    <h1>Summary</h1>\n    <SelectedLetterContainer />\n    <p>Magna cernantur doctrina te mandaremus quem ipsum senserit irure.</p>\n    <p>Nam ipsum senserit an proident nam quis possumus.</p>\n  </>\n);\n\nexport default Summary;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport FilterBarContainer from '../containers/FilterBarContainer';\nimport SelectedLetterContainer from '../containers/SelectedLetterContainer';\n\nconst Data = () => (\n  <>\n    <FilterBarContainer />\n    <h1>Data</h1>\n    <SelectedLetterContainer />\n    <Link to=\"/\">Go Back Home</Link>\n    <div className=\"row\">\n      <div className=\"col-md-6\">\n        <span>Chart</span>\n      </div>\n      <div className=\"col-md-6\">\n        <span>Chart</span>\n      </div>\n    </div>\n  </>\n);\n\nexport default Data;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Sidebar = () => (\n  <nav className=\"col-md-2 d-none d-md-block bg-light sidebar vh-100\">\n    <div className=\"sidebar-sticky\">\n      <ul className=\"nav nav-pills flex-column py-3\">\n        <li className=\"nav-item\">\n          <NavLink exact to=\"/\" className=\"nav-link\">Summary</NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink to=\"/data\" className=\"nav-link\">Data</NavLink>\n        </li>\n      </ul>\n    </div>\n  </nav>\n);\n\nexport default Sidebar;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Navbar = () => (\n  <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n    <span className=\"navbar-brand\">Dashboard</span>\n    <button\n      className=\"navbar-toggler\"\n      type=\"button\"\n      data-toggle=\"collapse\"\n      data-target=\"#navbarCollapse\"\n      aria-controls=\"navbarCollapse\"\n      aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\" />\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n      <ul className=\"navbar-nav mr-auto d-md-none\">\n        <li className=\"nav-item active\">\n          <NavLink exact to=\"/\" className=\"nav-link\">\n            Summary\n            <span className=\"sr-only\">(current)</span>\n          </NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink to=\"/data\" className=\"nav-link\">Data</NavLink>\n        </li>\n      </ul>\n    </div>\n  </nav>\n);\n\nexport default Navbar;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport configureStore, { history } from './lib/configureStore';\n\nimport 'jquery';\nimport 'popper.js';\nimport 'bootstrap';\n\nimport Summary from './pages/Summary';\nimport Data from './pages/Data';\nimport Sidebar from './components/Sidebar';\nimport Navbar from './components/Navbar';\n\nimport './App.scss';\n\nconst store = configureStore();\n\nconst App = () => (\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <>\n        <Navbar />\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <Sidebar />\n            <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10\">\n              <Route exact path=\"/\" component={Summary} />\n              <Route path=\"/data\" component={Data} />\n            </main>\n          </div>\n        </div>\n      </>\n    </ConnectedRouter>\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}